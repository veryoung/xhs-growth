import{httpConfig as i}from"../../config/http.config.js";class t{constructor(i){this.fetchCore=i.fetchCore,this.coreBaseUrl=i.baseUrl||"",this.activityId=i.activityId}go(i,t){if("deeplink"!==(null==t?void 0:t.type))if("url"!==(null==t?void 0:t.type));else{const s=i.replace("https://",""),[o,e]=s.split("?");xhs.openXhsDeeplink({link:`xhsdiscover://webview/${o}?${decodeURIComponent(e)}`,success:null==t?void 0:t.success,fail:null==t?void 0:t.fail,complete:null==t?void 0:t.complete})}else xhs.openXhsDeeplink({link:i||"",success:null==t?void 0:t.success,fail:null==t?void 0:t.fail,complete:null==t?void 0:t.complete})}fetch(i,t,s,o){return new Promise(((e,l)=>{(t=t.replace("{activityId}",this.activityId)).startsWith(this.coreBaseUrl)||(t=this.coreBaseUrl+t),this.requestToken&&(o={...o,authorization:""+this.requestToken}),this.fetchCore.request({url:t,method:i,data:s,header:o,success:async l=>{var n;if(10009===(null===(n=l.data)||void 0===n?void 0:n.code))return await this.init(),void this.fetch(i,t,s,o);e(l.data)},fail:i=>{l(i)}})}))}async init(){const{code:i}=await xhs.login();if(!i)throw Error("\u8bf7\u5b8c\u6210\u5c0f\u7a0b\u5e8f\u767b\u5f55");await this.setAuthorization(i)}async setAuthorization(t){const s=await this.fetch("POST",i.API_LIST.login,{code:t});this.requestToken=s.data.authorization}async getUserType(){return await this.fetch("POST",i.API_LIST.userType)}}export{t as default};